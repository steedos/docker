version: "3.9"

services:

  # Steedos Platform  
  steedos:
    image: steedos/steedos-enterprise:2.5
    ports:
      - "${STEEDOS_PORT}:3000"
    volumes:
      - "steedos-packages:/app/.steedos"
    environment:
      - ROOT_URL=${STEEDOS_ROOT_URL} 
      - PORT=3000 
      - MONGO_URL=mongodb://root:${MONGODB_ROOT_PASSWORD}@mongodb-primary,mongodb-secondary/${MONGODB_DATABASE}?authSource=admin
      - MONGO_OPLOG_URL=mongodb://root:${MONGODB_ROOT_PASSWORD}@mongodb-primary:27017/local?authSource=admin
      - STEEDOS_TENANT_ENABLE_ACTIVATION=true
      - STEEDOS_TENANT_ENABLE_PASSWORD_LOGIN=true
      - STEEDOS_CFS_STORE=S3
      - STEEDOS_CFS_AWS_S3_ENDPOINT=http://minio:9000
      - STEEDOS_CFS_AWS_S3_FORCE_PATH_STYLE=true
      - STEEDOS_CFS_AWS_S3_BUCKET=${MINIO_DEFAULT_BUCKETS:-steedos}
      - STEEDOS_CFS_AWS_S3_ACCESS_KEY_ID=${MINIO_ROOT_USER} 
      - STEEDOS_CFS_AWS_S3_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD} 
      - TRANSPORTER=nats://${NATS_USERNAME}:${NATS_USERNAME}@nats:4222
      - CACHER=redis://:${REDIS_PASSWORD}@redis:6379
      - INSTANCES=1 # Nodejs Cluster Instances
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 60s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - mongodb-primary
      - nats
    
  # Cache Service  
  redis:
    image: ecr.aws.steedos.cn/dockerhub/bitnami/redis:6.2
    command: "redis-server --requirepass ${REDIS_PASSWORD}  --save \"\" --appendonly no --loglevel warning"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
 
  # Micro Service Transporter
  nats:
    image: steedos/nats
    environment:
      - MAX_PAYLOAD=4096000 #4MB
      - NATS_USERNAME=${NATS_USERNAME}
      - NATS_PASSWORD=${NATS_PASSWORD}
    ports:
      - "4222:4222"
      # - "8222:8222" # nats monitor port


  # S3 Storage Service
  minio:
    image: bitnami/minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-steedos}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-steedos123}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS:-steedos}
    volumes:
      - steedos-minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001" 


  # Database Service Cluster
  mongodb-primary:
    image: 'ecr.aws.steedos.cn/dockerhub/bitnami/mongodb:4.4'
    ports:
      - 27017:27017
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGODB_REPLICA_SET_NAME=${MONGODB_REPLICA_SET_NAME}
      - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_SET_KEY}
    volumes:
      - 'steedos-mongo-primary-data:/bitnami'

  mongodb-secondary:
    image: 'ecr.aws.steedos.cn/dockerhub/bitnami/mongodb:4.4'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGODB_REPLICA_SET_NAME=${MONGODB_REPLICA_SET_NAME}
      - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_SET_KEY}

  mongodb-arbiter:
    image: 'ecr.aws.steedos.cn/dockerhub/bitnami/mongodb:4.4'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_REPLICA_SET_NAME=${MONGODB_REPLICA_SET_NAME}
      - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_SET_KEY}

  # mongodb-backup-cron:
  #   image: appleboy/docker-backup-database:mongo-4.4
  #   depends_on:
  #     - mongodb-primary
  #     - minio
  #   logging:
  #     options:
  #       max-size: "100k"
  #       max-file: "3"
  #   environment:
  #     STORAGE_DRIVER: s3
  #     STORAGE_ENDPOINT: minio:9000
  #     STORAGE_BUCKET: mongo-backup
  #     STORAGE_PATH: prod
  #     STORAGE_SSL: "false"
  #     STORAGE_INSECURE_SKIP_VERIFY: "false"
  #     ACCESS_KEY_ID: ${MINIO_ROOT_USER}
  #     SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}

  #     DATABASE_DRIVER: mongo
  #     DATABASE_HOST: mongodb-primary:27017
  #     DATABASE_USERNAME: ${MONGODB_USERNAME}
  #     DATABASE_PASSWORD: ${MONGODB_PASSWORD}
  #     DATABASE_NAME: steedos
  #     DATABASE_OPTS: --authenticationDatabase=admin

  #     TIME_SCHEDULE: "0 0 * * *"
  #     TIME_LOCATION: Asia/Taipei


volumes:
  steedos-packages:
    driver: local
  steedos-minio-data:
    driver: local
  steedos-mongo-primary-data:
    driver: local